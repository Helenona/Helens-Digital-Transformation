/**
 * script.js
 * - Navigation toggle for small screens
 * - Restaurant form validation + mailto generation + preview + copy
 * - Small UI helpers
 */

/* NAV TOGGLE */
document.addEventListener('DOMContentLoaded', function () {
  const toggle = document.querySelectorAll('.nav-toggle');
  const navs = document.querySelectorAll('.main-nav');
  toggle.forEach(btn => {
    btn.addEventListener('click', () => {
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      btn.setAttribute('aria-expanded', !expanded);
      navs.forEach(n => {
        if (n.style.display === 'block') n.style.display = '';
        else n.style.display = 'block';
      });
    });
  });

  /* Problem page form logic */
  const form = document.getElementById('restaurantForm');
  const previewSection = document.getElementById('emailPreview');
  const emailContent = document.getElementById('emailContent');
  const previewBtn = document.getElementById('previewBtn');
  const copyBtn = document.getElementById('copyEmail');

  function generateEmailPayload({name, email, type, details}) {
    const subject = encodeURIComponent(`Restaurant inquiry — ${type} — from ${name}`);
    const bodyText = [
      `From: ${name} <${email}>`,
      `Type: ${type}`,
      '',
      `Details:`,
      details,
      '',
      '---',
      'This email was generated by the prototype form.'
    ].join('\n');
    return {subject, bodyText, mailto: `mailto:manager@oakandember.example?subject=${subject}&body=${encodeURIComponent(bodyText)}`};
  }

  if (form) {
    form.addEventListener('submit', function (e) {
      e.preventDefault();

      const name = document.getElementById('guestName').value.trim();
      const email = document.getElementById('guestEmail').value.trim();
      const type = document.getElementById('requestType').value;
      const details = document.getElementById('details').value.trim();

      // Basic validation
      if (!name || !email || !type || !details) {
        alert('Please complete all required fields before submitting.');
        return;
      }

      // Create preview + mailto
      const payload = generateEmailPayload({name, email, type, details});
      emailContent.textContent = payload.bodyText;
      previewSection.hidden = false;

      // Attempt to open user's default mail client with generated message
      // (If no default is configured this will not send — but user can copy preview.)
      window.location.href = payload.mailto;
    });

    // Preview button (shows preview without opening mail client)
    previewBtn && previewBtn.addEventListener('click', function () {
      const name = document.getElementById('guestName').value.trim();
      const email = document.getElementById('guestEmail').value.trim();
      const type = document.getElementById('requestType').value;
      const details = document.getElementById('details').value.trim();

      if (!name || !email || !type || !details) {
        alert('Please fill all fields to preview the email.');
        return;
      }
      const payload = generateEmailPayload({name, email, type, details});
      emailContent.textContent = payload.bodyText;
      previewSection.hidden = false;
      // smooth scroll to preview
      previewSection.scrollIntoView({behavior:'smooth', block:'center'});
    });

    // Copy preview
    copyBtn && copyBtn.addEventListener('click', function () {
      const text = emailContent.textContent;
      if (!text) return;
      navigator.clipboard.writeText(text).then(() => {
        copyBtn.textContent = 'Copied ✓';
        setTimeout(()=> copyBtn.textContent = 'Copy preview text', 2000);
      }).catch(()=> {
        alert('Unable to copy — please select the text and copy manually.');
      });
    });
  }
});
